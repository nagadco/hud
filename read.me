read.me

## Fetch Slack Messages

This repository includes a script `fetch_slack_messages.py` for exporting
messages from Slack channels to a CSV file.

### Setup
1. Install Python 3.
2. Install dependencies:
   ```bash
   pip install slack_sdk
   ```
3. Set the environment variable `SLACK_TOKEN` with a valid Slack API token.

### Usage
Run the script by specifying channel IDs and the output path:
```bash
python fetch_slack_messages.py --channels C12345678 C23456789 --output messages.csv
```
Multiple channel IDs can be provided after `--channels`.

The script writes messages from the specified channels into the CSV file.
Each message includes the user's display name instead of their ID.

## Territory Status Summary

The `territory_status_summary.py` script generates an Excel report summarizing territory statuses for each district.

### Setup
1. Install Python 3.
2. Install dependencies:
   ```bash
   pip install pandas openpyxl requests
   ```

### Usage
Provide either a URL to fetch data from or a local file path containing the data:
```bash
python territory_status_summary.py --url https://example.com/data.json --output-dir reports
```
Or using a local file:
```bash
python territory_status_summary.py --file data.json --output-dir reports
```

The script writes an Excel file named `territory_status_summary_<timestamp>.xlsx` to the specified output directory.

## Google Sheets District Tracker

The `districts_summary.gs` script is a Google Apps Script that builds an
up-to-date dashboard summarizing area progress for each district.

### Overview
- **Areas sheet**: A sheet named `Areas` with columns `District`, `Area_ID` and
  `Status`.
- **Summary sheet**: A sheet named `Districts_Summary` is created/updated
  automatically with totals, completion percentages and an emoji based status.
- **External totals**: Optionally provide a `District_Totals` sheet listing the
  total area count per district. Set `USE_EXTERNAL_TOTALS` in the script to use
  those numbers instead of counting rows.

Whenever you edit the `Areas` sheet, the summary is refreshed automatically via
an `onEdit` trigger. Run `updateDistrictsSummary()` manually if you need to
rebuild the table.
